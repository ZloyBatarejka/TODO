{"version":3,"sources":["components/Form/Form.module.css","components/Header/Header.module.css","components/Loading/Loading.module.css","components/UL/ul.module.css","components/Button/Button.module.css","components/Li/Li.module.css","components/Button/Button.js","components/Li/Li.js","components/UL/Ul.js","components/Header/Header.js","components/Loading/Loading.js","components/Form/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","className","classes","onClick","text","Li","state","value","item","url","input","title","show","done","changeHandler","console","log","setState","deleteHandler","a","axios","delete","saveHandler","event","changeStateHandler","target","patch","doneHandler","toDo","this","opacity","inputStatus","textfield","hide","valueStatus","join","checkbox","type","onInput","onChange","Component","Ul","renderItem","list","map","id","key","Math","random","ul","Header","header","h1","Loader","center","Form","addHandler","serverList","inputValue","loading","submitHandler","preventDefault","post","getList","get","response","responseList","Array","from","Object","entries","data","onSubmit","app","todoForm","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.658253de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoForm\":\"Form_todoForm__2WLh3\",\"input\":\"Form_input__2xHoA\",\"app\":\"Form_app__3pZVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1HHtK\",\"h1\":\"Header_h1__2uq6J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loading_Loader__1GB9n\",\"lds-hourglass\":\"Loading_lds-hourglass__1UcLZ\",\"center\":\"Loading_center__3YLB_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ul_ul__3Mzeu\",\"red\":\"ul_red__2XuFQ\",\"blue\":\"ul_blue__Jjq7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3dbkq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDo\":\"Li_toDo__16Ibv\",\"completed\":\"Li_completed__JRab4\",\"checkbox\":\"Li_checkbox__1fV-T\",\"textfield\":\"Li_textfield__3I0wf\",\"title\":\"Li_title__21oTV\",\"editing\":\"Li_editing__2T-u9\",\"show\":\"Li_show__3WRUU\",\"hide\":\"Li_hide__2Wfbx\",\"opacity\":\"Li_opacity__3vT9K\"};","import React from \"react\"\r\nimport classes from \"./Button.module.css\"\r\nexport const Button = ({ props }) => {\r\n    return (\r\n        <button\r\n            className={classes.Button}\r\n            onClick={props.onClick}\r\n        >{props.text}</button>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport classes from \"./Li.module.css\";\r\nimport { Button } from \"../Button/Button\"\r\nimport axios from \"axios\";\r\nexport class Li extends Component {\r\n    state = {\r\n        value: this.props.item[1].value,\r\n        url: this.props.item[0],\r\n        input: false,\r\n        title: true,\r\n        show: true,\r\n        done: false\r\n    }\r\n\r\n    changeHandler = () => {\r\n        this.state.done\r\n            ? console.log(\"Its done\")\r\n            : this.setState({\r\n                input: true,\r\n                title: false\r\n            })\r\n    }\r\n    deleteHandler = async () => {\r\n        await axios.delete(`https://todo-eb35e.firebaseio.com/list/${this.state.url}.json`)\r\n        this.setState({\r\n            show: false\r\n        })\r\n    }\r\n    saveHandler = (event) => [\r\n        this.setState({\r\n            input: false,\r\n            title: true\r\n        })\r\n    ]\r\n    changeStateHandler = async (event) => {\r\n\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n        await axios.patch(`https://todo-eb35e.firebaseio.com/list/${this.state.url}.json`, { value: event.target.value })\r\n    }\r\n    doneHandler = () => {\r\n        this.setState({\r\n            done: this.state.done ? false : true\r\n        })\r\n    }\r\n    render() {\r\n        const toDo = [\r\n            classes.toDo,\r\n            this.state.done\r\n                ? classes.opacity\r\n                : null\r\n        ]\r\n        const inputStatus = [\r\n            classes.textfield,\r\n            this.state.input ? classes.show : classes.hide\r\n        ]\r\n        const valueStatus = [\r\n            classes.title,\r\n            this.state.title ? classes.show : classes.hide\r\n        ]\r\n        return (\r\n            <>\r\n\r\n                {this.state.show\r\n                    ? < li className={toDo.join(\" \")} >\r\n                        {\r\n                            this.state.title\r\n                                ? <input className={classes.checkbox} type=\"checkbox\" onInput={this.doneHandler} />\r\n                                : null\r\n                        }\r\n                        <label className={valueStatus.join(\" \")} > {this.state.value}</label >\r\n                        <input className={inputStatus.join(\" \")} type=\"text\" value={this.state.value} onChange={this.changeStateHandler} />\r\n                        {\r\n                            this.state.title\r\n                                ? <Button props={{ text: \"Изменить\", onClick: this.changeHandler }} />\r\n                                : <Button props={{ text: \"Сохранить\", onClick: this.saveHandler }} />\r\n                        }\r\n\r\n                        <Button props={{ text: \"Удалить\", onClick: this.deleteHandler }} />\r\n                    </li >\r\n                    : null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./ul.module.css\"\r\nimport { Li } from \"../Li/Li\"\r\nexport class Ul extends Component {\r\n\r\n    renderItem = () => {\r\n\r\n        return this.props.list.map((item, id) => {\r\n            return (\r\n                <Li item={item} key={id + Math.random()} />\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <ul className={classes.ul}>\r\n                {this.renderItem()}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Header.module.css\"\r\nexport const Header = () => (\r\n    <div className={classes.header}>\r\n        <h1 className={classes.h1}>TODO</h1>\r\n    </div>\r\n)","import React from \"react\";\r\nimport classes from \"./Loading.module.css\"\r\nconst Loader = props => (\r\n    <div className={classes.center}>\r\n        <div className={classes.Loader} />\r\n    </div>\r\n)\r\nexport default Loader;","import React, { Component } from \"react\";\r\nimport classes from \"./Form.module.css\"\r\nimport { Ul } from \"../UL/Ul\"\r\nimport { Button } from \"../Button/Button\"\r\nimport { Header } from \"../Header/Header\"\r\nimport axios from \"axios\";\r\nimport Loader from \"../Loading/Loading\"\r\nexport class Form extends Component {\r\n    addHandler = () => {\r\n        console.log(\"added\")\r\n    }\r\n    state = {\r\n        serverList: \"\",\r\n        inputValue: \"\",\r\n        id: 0,\r\n        loading: true,\r\n        list: [\r\n\r\n        ]\r\n    }\r\n    async getList() {\r\n        try {\r\n            const response = await axios.get('https://todo-eb35e.firebaseio.com/list.json')\r\n            const responseList = Array.from(Object.entries(response.data))\r\n            this.setState({\r\n                list: responseList,\r\n                loading: false\r\n            })\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        this.getList()\r\n    }\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n        this.setState({\r\n            inputValue: event.target.value\r\n        })\r\n    }\r\n    addHandler = async () => {\r\n        try {\r\n            await axios.post(\"https://todo-eb35e.firebaseio.com/list.json\", { value: this.state.inputValue })\r\n            this.setState({\r\n                inputValue: \"\"\r\n            })\r\n            this.getList()\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.loading\r\n                    ? <Loader />\r\n                    : <div onSubmit={this.submitHandler} className={classes.app}>\r\n\r\n                        <Header />\r\n                        <Ul list={this.state.list} />\r\n\r\n                        <div className={classes.todoForm}>\r\n                            <input type=\"text\" className={classes.input} onChange={this.changeHandler} value={this.state.inputValue} />\r\n                            <Button props={{ text: \"Добавить\", onClick: this.addHandler }} />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Form } from \"./components/Form/Form\"\nimport { Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Form} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}