{"version":3,"sources":["components/Form/Form.module.css","components/Loading/Loading.module.css","components/UL/ul.module.css","components/Button/Button.module.css","components/Button/Button.js","components/Li/Li.js","components/UL/Ul.js","components/Loading/Loading.js","components/Form/Form.js","App.js","serviceWorker.js","index.js","components/Li/Li.module.css"],"names":["module","exports","Button","props","className","classes","onClick","text","Li","state","value","item","url","input","title","show","done","changeHandler","console","log","setState","deleteHandler","a","axios","delete","saveHandler","event","changeStateHandler","target","patch","doneHandler","toDo","this","opacity","inputStatus","textfield","hide","valueStatus","join","checkbox","type","onInput","onChange","Component","Ul","renderItem","list","map","id","key","Math","random","ul","Loader","center","Form","addHandler","serverList","inputValue","loading","submitHandler","preventDefault","getList","post","get","response","responseList","Array","from","Object","entries","data","onSubmit","app","todoForm","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.08f50a5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoForm\":\"Form_todoForm__2WLh3\",\"title\":\"Form_title__1qv3M\",\"input\":\"Form_input__2xHoA\",\"app\":\"Form_app__3pZVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loading_Loader__1GB9n\",\"lds-hourglass\":\"Loading_lds-hourglass__1UcLZ\",\"center\":\"Loading_center__3YLB_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ul_ul__3Mzeu\",\"red\":\"ul_red__2XuFQ\",\"blue\":\"ul_blue__Jjq7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3dbkq\"};","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\nexport const Button = ({ props }) => {\r\n  return (\r\n    <button className={classes.Button} onClick={props.onClick}>\r\n      <i className={props.text}></i>\r\n    </button>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Li.module.css\";\r\nimport { Button } from \"../Button/Button\";\r\nimport axios from \"axios\";\r\nexport class Li extends Component {\r\n  state = {\r\n    value: this.props.item[1].value,\r\n    url: this.props.item[0],\r\n    input: false,\r\n    title: true,\r\n    show: true,\r\n    done: false\r\n  };\r\n\r\n  changeHandler = () => {\r\n    this.state.done\r\n      ? console.log(\"Its done\")\r\n      : this.setState({\r\n          input: true,\r\n          title: false\r\n        });\r\n  };\r\n  deleteHandler = async () => {\r\n    await axios.delete(\r\n      `https://todo-eb35e.firebaseio.com/list/${this.state.url}.json`\r\n    );\r\n    this.setState({\r\n      show: false\r\n    });\r\n  };\r\n  saveHandler = event => [\r\n    this.setState({\r\n      input: false,\r\n      title: true\r\n    })\r\n  ];\r\n  changeStateHandler = async event => {\r\n    this.setState({\r\n      value: event.target.value\r\n    });\r\n    await axios.patch(\r\n      `https://todo-eb35e.firebaseio.com/list/${this.state.url}.json`,\r\n      { value: event.target.value }\r\n    );\r\n  };\r\n  doneHandler = () => {\r\n    this.setState({\r\n      done: this.state.done ? false : true\r\n    });\r\n  };\r\n  render() {\r\n    const toDo = [classes.toDo, this.state.done ? classes.opacity : null];\r\n    const inputStatus = [\r\n      classes.textfield,\r\n      this.state.input ? classes.show : classes.hide\r\n    ];\r\n    const valueStatus = [\r\n      classes.title,\r\n      this.state.title ? classes.show : classes.hide\r\n    ];\r\n    return (\r\n      <>\r\n        {this.state.show ? (\r\n          <li className={toDo.join(\" \")}>\r\n            {this.state.title ? (\r\n              <input\r\n                className={classes.checkbox}\r\n                type=\"checkbox\"\r\n                onInput={this.doneHandler}\r\n              />\r\n            ) : null}\r\n            <label className={valueStatus.join(\" \")}> {this.state.value}</label>\r\n            <input\r\n              className={inputStatus.join(\" \")}\r\n              type=\"text\"\r\n              value={this.state.value}\r\n              onChange={this.changeStateHandler}\r\n            />\r\n            {this.state.title ? (\r\n              <Button\r\n                props={{\r\n                  text: \"fas fa-pencil-alt\",\r\n                  onClick: this.changeHandler\r\n                }}\r\n              />\r\n            ) : (\r\n              <Button\r\n                props={{ text: \"fas fa-save-alt\", onClick: this.saveHandler }}\r\n              />\r\n            )}\r\n\r\n            <Button\r\n              props={{ text: \"fas fa-trash-alt\", onClick: this.deleteHandler }}\r\n            />\r\n          </li>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./ul.module.css\";\r\nimport { Li } from \"../Li/Li\";\r\nexport class Ul extends Component {\r\n  renderItem = () => {\r\n    return this.props.list.map((item, id) => {\r\n      return <Li item={item} key={id + Math.random()} />;\r\n    });\r\n  };\r\n  render() {\r\n    return <ul className={classes.ul}>{this.renderItem()}</ul>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Loading.module.css\"\r\nconst Loader = props => (\r\n    <div className={classes.center}>\r\n        <div className={classes.Loader} />\r\n    </div>\r\n)\r\nexport default Loader;","import React, { Component } from \"react\";\r\nimport classes from \"./Form.module.css\";\r\nimport { Ul } from \"../UL/Ul\";\r\nimport { Button } from \"../Button/Button\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Loading/Loading\";\r\nexport class Form extends Component {\r\n  addHandler = () => {\r\n    console.log(\"added\");\r\n  };\r\n  state = {\r\n    serverList: \"\",\r\n    inputValue: \"\",\r\n    id: 0,\r\n    loading: true,\r\n    list: []\r\n  };\r\n  async getList() {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://todo-eb35e.firebaseio.com/list.json\"\r\n      );\r\n      const responseList = Array.from(Object.entries(response.data));\r\n      this.setState({\r\n        list: responseList,\r\n        loading: false\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      console.log(\"БД на фб упала.(тестовый режим - 30 дней) Нужно обновить\");\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    this.getList();\r\n  }\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  changeHandler = event => {\r\n    this.getList();\r\n    this.setState({\r\n      inputValue: event.target.value\r\n    });\r\n  };\r\n  addHandler = async () => {\r\n    try {\r\n      await axios.post(\"https://todo-eb35e.firebaseio.com/list.json\", {\r\n        value: this.state.inputValue\r\n      });\r\n      this.setState({\r\n        inputValue: \"\"\r\n      });\r\n      this.getList();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div onSubmit={this.submitHandler} className={classes.app}>\r\n            <Ul list={this.state.list} />\r\n\r\n            <div className={classes.todoForm}>\r\n              <input\r\n                type=\"text\"\r\n                className={classes.input}\r\n                onChange={this.changeHandler}\r\n                value={this.state.inputValue}\r\n              />\r\n              <Button\r\n                props={{\r\n                  text: \"fas fa-plus-square fa-2x\",\r\n                  onClick: this.addHandler\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Form } from \"./components/Form/Form\";\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Form} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDo\":\"Li_toDo__16Ibv\",\"checkbox\":\"Li_checkbox__1fV-T\",\"textfield\":\"Li_textfield__3I0wf\",\"title\":\"Li_title__21oTV\",\"completed\":\"Li_completed__JRab4\",\"editing\":\"Li_editing__2T-u9\",\"show\":\"Li_show__3WRUU\",\"hide\":\"Li_hide__2Wfbx\",\"opacity\":\"Li_opacity__3vT9K\"};"],"sourceRoot":""}